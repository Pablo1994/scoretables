extends layout

block content
	// External script
	script(src='https://code.jquery.com/jquery-3.1.1.min.js')

	// Create League Form
	H1 Create League
	H2 Step 1: Add teams to the league
	form(action='#')
		div.form-group
			label(for='user') User:
			input#userName.form-control(type='text', name='user')
		div.form-group
			label(for='team') Team:
			input#team.form-control(type='text', name='team')
		div.form-group
			label(for='url') Image URL:
			input#url.form-control(type='text', name='url')
	button.btn.btn-primary(onclick='addTeamToList()') Add

	H2 Teams
	button.btn.btn-primary(onclick='clearTable()') Clear

	div(class='table-container' style='overflow-x:auto;')
		table#leagueTeamsTable(style='width:100%', border='1')
					
	H2 Step 2: Add league info
	form(action='#')
		div.form-group
			label(for='id') ID:
			input#matchdayId.form-control(type='text', name='id')
		div.form-group
			label(for='title') Title:
			input#matchdayTitle.form-control(type='text', name='title')
		div.form-group
			label(for='matchdayCount') Matchday Count:
			input#matchdayCount.form-control(type='text', name='matchdayCount')
		
	button.btn.btn-primary(onclick='createMatchDay()') Create Matchday





	// Scripts
	script.

		var storageKey = 'scoreTablePlayers';

		var addTeamToList = function() {
			var userName = document.getElementById('userName').value;
			var team = document.getElementById('team').value;
			var imageurl = document.getElementById('url').value;

			if(userName != '' && team != '' && imageurl != '') {
				var newPlayer = { 'ID': userName, 'Team': team, 'ImageURL': imageurl };

				// Local Storage only support strings. So we need to use JSON.stringify() and JSON.parse()
				// First, get the players, if there are not players yet, we will get null rather than an exception
				var playersInStorage = localStorage.getItem(storageKey);
				var playersInStorage = JSON.parse(playersInStorage);

				// Add the new player to the list
				var players = [];
				if(playersInStorage != null){
					players.extend(playersInStorage);
				}
				players.push(newPlayer);

				// Save the updated list
				localStorage.setItem(storageKey, JSON.stringify(players));

				populateTeamsTable();
				
				console.log('New player was added: ' + JSON.stringify(players));
			}
			else{
				console.log('Warning: All fields needed!');
			}

			document.getElementById('userName').value = '';
			document.getElementById('team').value = '';
			document.getElementById('url').value = '';
		}

		Array.prototype.extend = function (other_array) {
			other_array.forEach(function(v) {this.push(v)}, this);
		}

		var populateTeamsTable = function() {
			var table = document.getElementById('leagueTeamsTable');
			while (table.firstChild) {
				table.removeChild(table.firstChild);
			}

			var storageKey = 'scoreTablePlayers';

			var playersInStorage = localStorage.getItem(storageKey);
			var playersInStorage = JSON.parse(playersInStorage);

			// Populate the table
			var table = document.getElementById('leagueTeamsTable');

			// Table title
			var th1 = document.createElement('th');
			var th2 = document.createElement('th');
			var th3 = document.createElement('th');
			th1.innerHTML = 'User';
			th2.innerHTML = 'Team';
			th3.innerHTML = 'Image';
			table.appendChild(th1);
			table.appendChild(th2);
			table.appendChild(th3);

			for (var i = 0; i < playersInStorage.length; i++){
				var tr = document.createElement('tr');   

				var td1 = document.createElement('td');
				var td2 = document.createElement('td');
				var td3 = document.createElement('td');

				var text1 = document.createTextNode(playersInStorage[i].ID);
				var text2 = document.createTextNode(playersInStorage[i].Team);
				var image3 = document.createElement("IMG");
				image3.src = playersInStorage[i].ImageURL;
				image3.height = 100;

				td1.appendChild(text1);
				td2.appendChild(text2);
				td3.appendChild(image3);
				tr.appendChild(td1);
				tr.appendChild(td2);
				tr.appendChild(td3);

				table.appendChild(tr);
			}
		}

		var clearTable = function() {
			localStorage.setItem(storageKey, null);
			var table = document.getElementById('leagueTeamsTable');
			while (table.firstChild) {
				table.removeChild(table.firstChild);
			}
		}

		function createMatchDay(){
			var id = document.getElementById('matchdayId').value;
			var title = document.getElementById('matchdayTitle').value;
			var matchdayCount = document.getElementById('matchdayCount').value;

			if(id != '' && title != '' && matchdayCount != ''){
				// string format
				var teams = localStorage.getItem(storageKey);

				// to JSON
				teams = JSON.parse(teams);

				var postArguments = { 'ID': id, 'Title': title, 'MatchDayAmount': parseInt(matchdayCount), 'Teams': teams };

				var jsonArguments = JSON.stringify(postArguments);
				console.log('Create league post arguments: ' + jsonArguments);

				return $.ajax({
					type: "POST",
					//url: "http://localhost:1337/api/leagues",
					url: "https://scoretables.herokuapp.com/api/leagues",
					data: jsonArguments,
					contentType: "application/json",
					success: function( respuesta ){
						alert('success');
					},
					error: function(error) {
						alert('Check this error: ' + error);
					}
				});
			}
		}
		
		populateTeamsTable();
